user nginx;
worker_processes    auto;
include /etc/nginx/modules-enabled/*.conf;

events { 
    worker_connections 1024; 
}

http {

    keepalive_timeout 65;

    upstream auth-container {
        server auth:11197;
    }

    upstream api-container {
        server api:7161;
    }

    server {
        server_tokens off;

        listen  80;
        root    /usr/share/nginx/html/dist;
        include /etc/nginx/mime.types;
        server_name ctor 45.12.74.222;

        error_page 405 =200 $uri;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        
        if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        location /api/auth {
            proxy_pass http://auth-container/api/auth;
        }

        location /api/refresh {
            proxy_pass http://auth-container/api/refresh;
        }

        location /api/registration {
            proxy_pass http://api-container/api/registration;
        }

        location ~ /api/user/\w*[a-zA-Z0-9]/projects {
            proxy_pass http://api-container;
        }

        location /api/project/create {
            proxy_pass http://api-container/api/project/create;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}