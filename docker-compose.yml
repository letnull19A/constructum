version: '3.7'
name: 'constructum'

services:
  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    networks:
      cnetwork:
        ipv4_address: 7.5.0.10

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - '27001:27019'
    networks:
      cnetwork:
        ipv4_address: 7.5.0.20
    volumes:
      - mongodb:/var/lib/mongodb

  auth:
    image: constructum-auth:latest
    restart: always
    container_name: auth
    depends_on:
      - mongo
      - redis
    environment:
      - PORT=11197
      - ENABLED_CORS=false
      - REDIS_URL=redis://redis
      - IDENTIFY_HOST="7.5.0.60"
      - IDENTIFY_PORT=3498
    networks:
      cnetwork:
        ipv4_address: 7.5.0.30
    ports:
      - '11197:11197'

  api:
    image: constructum-api:latest
    restart: always
    environment:
      - PORT=7161
      - ENABLED_CORS=false
      - REDIS_URL=redis://redis
    depends_on:
      - mongo
      - redis
      - compiler
    networks:
      cnetwork:
        ipv4_address: 7.5.0.40
    ports:
      - '7161:7161'

  compiler:
    image: constructum-compiler:latest
    restart: always
    environment:
      - PORT=12245
      - NODE_ENV=production
    depends_on:
      - auth
    networks:
      cnetwork:
        ipv4_address: 7.5.0.50
    ports:
      - '12245:12245'

  identify:
    image: constructum-identify:latest
    restart: always
    depends_on:
      - mongo
    networks:
      cnetwork:
        ipv4_address: 7.5.0.60

  web-server:
    image: constructum-client:latest
    restart: always
    depends_on:
      - api
      - auth
    ports:
      - 8080:8080
      - 80:80
    volumes:
      - "./nginx/nginx.conf://etc/nginx/nginx.conf:ro"
      - "./services/service.client://usr/share/nginx/html:ro"
    networks:
      cnetwork:
        ipv4_address: 7.5.0.90

volumes:
  mongodb:

networks:
  cnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 7.5.0.0/16
          gateway: 7.5.0.1
